syntax = "proto3";

package grpc;

option go_package = "SD/LAB1/proto";

/*
Aca lo que se define es un servicio, en el fondo es el recurso que alguno de los integrantes del sistema
usaran en las llamadas gRPC, por lo que debe tener un Input (que es lo que se enviara desde el solicitante)
y un Output (que es lo que se retorna desde quien recibio la solicitud)
*/
service MessageService {
    rpc Intercambio (Message) returns (Answer);
    rpc Informacion (Answer) returns (Answer);
    rpc Nodo (Answer) returns (Answer);
}

/*
Aca se define el tipo de dato Message, se debe indicar:
1) Tipo de dato
2) Nombre de la variable
3) Numeros de campo: Numeros que identifican cada campo dentro del mensaje en formato binario. Numeros 
                    entre el 1 y el 15 deben usarse con los datos que mas se usaran ya que solo usan 1 byte
*/

//Hay que revisar estos de aca, para ver que ponemos para el intercambio de msjes :c

message Message {
    string body = 1;
    string data = 2;
}
/*
Answer solamente se utilizara para respuestas, enviar un Perfecto si el mensaje
fue enviado de manera correcta!
*/

message Answer{
    string body = 1;
}